name: Weekly EUTTC Signup

on:
  schedule:
    # 每周二 10:00 AM UK时间
    # 冬令时（10月-3月）: UTC 10:00
    # 夏令时（4月-9月）: UTC 09:00
    - cron: '0 10 * 10-12,1-3 2'
    - cron: '0 9 * 4-9 2'
  
  # 允许手动触发（测试用）
  workflow_dispatch:

jobs:
  signup:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 安装Google Chrome
      run: |
        # 添加Chrome仓库
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        
        # 更新并安装Chrome
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # 验证安装
        google-chrome --version
    
    - name: 安装Python依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 显示环境信息
      run: |
        echo "======================================"
        echo "Python版本: $(python --version)"
        echo "Chrome版本: $(google-chrome --version)"
        echo "系统时间: $(date)"
        echo "UK时间: $(TZ='Europe/London' date)"
        echo "======================================"
    
    - name: 运行预约脚本
      env:
        FIRST_NAME: ${{ secrets.FIRST_NAME }}
        LAST_NAME: ${{ secrets.LAST_NAME }}
        EMAIL: ${{ secrets.EMAIL }}
      run: |
        echo "🏓 开始执行EUTTC预约脚本..."
        python signup_bot.py
        EXIT_CODE=$?
        echo "脚本执行完成，退出码: $EXIT_CODE"
        exit $EXIT_CODE
    
    - name: 上传日志和截图
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: signup-logs-${{ github.run_number }}
        path: |
          *.log
          *.png
        retention-days: 30
        if-no-files-found: warn
    
    - name: 输出执行结果
      if: always()
      run: |
        echo "=========================================="
        echo "执行状态: ${{ job.status }}"
        echo "=========================================="
        if [ -f signup_bot.log ]; then
          echo ""
          echo "📋 日志内容（最后30行）:"
          echo "=========================================="
          tail -n 30 signup_bot.log
        else
          echo "⚠️ 未找到日志文件"
        fi
        echo "=========================================="
